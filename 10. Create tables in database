16.	Create tables in the database which contain the details of items (books in our case Like Book name, Price, Quantity, Amount) of each category.
Modify your catalogue page in such a way that you should connect to the database and extract data from the tables and display them in the catalogue page using JDBC.
Procedure:
o	Ensure you have a database system (e.g., MySQL, PostgreSQL) installed and running.
o	Create tables to store item details (e.g., books).
o	Define columns for book name, price, quantity, and amount.
o	In your Java program (e.g., your catalog page), establish a connection to the database using JDBC.
o	Provide the necessary connection details (URL, username, password).
o	Write SQL queries to retrieve data from the tables.
o	For example:
ï‚§	Retrieve book names, prices, quantities, and amounts for each category.
o	Use JDBC to execute the SQL queries against the database.
o	Retrieve the result sets containing the book details.
o	Modify your catalog page to display the retrieved book information.
o	You can format it as a table, list, or any other suitable format.
o	Handle exceptions related to database connectivity, query execution, and data retrieval.
o	Gracefully handle errors to prevent crashes.
o	Run your modified catalog page.
o	Verify that it successfully connects to the database and displays the book details.

Sample Code:
Bookscart.java
import javax.servlet.*;
import javax.servlet.http.*;
import java.sql.*;
import java.io.*;
import java.lang.*;
public class Bookscat extends HttpServlet 
{
public void doGet(HttpServletRequest req,HttpServletResponse res) throws ServletException,IOException
{
    PrintWriter out=res.getWriter();
    res.setContentType("text/html");
    int s,qu;
    float pr,am;
    String nam;
    String cpath="/MyApp/images/cart.png";
    try{
        Class.forName("com.mysql.jdbc.Driver");
        String ur="jdbc:mysql://localhost:3306/test";
        Connection con=DriverManager.getConnection(ur,"root","root");
        String q="select * from books;";
        PreparedStatement stmt=con.prepareStatement(q);
        ResultSet rs=stmt.executeQuery();
        out.println("<html><head><title>Catalogue Page</title></head><body></center><table>");
        out.println("<tr><th>Book image</th><th>Name</th><th>Price</th><th>Quantity</th><th>Amount</th><th></th></tr>");
        out.println("<h1> Book Catalogue</h1>");
         while(rs.next())
         {
            String imgurl="/MyApp/images/b"+rs.getInt(1)+".jpg";
            nam=rs.getString(2);
            pr=rs.getFloat(3);
            qu=rs.getInt(4);
            am=rs.getFloat(5);
            out.println("<tr><td><img src="+imgurl+" width=40 height=40></td><td>"+nam+"</td>");
            out.println("<td>"+pr+"</td><td>"+qu+"</td><td>"+am+"</td>");
            out.println("<td> <button type='button'><img src="+cpath+" width=20 height=20></button></td></tr>");
         }
         out.println("</table></center></body></html>");     
       stmt.close();
       con.close();
       out.close();
    }
    catch(ClassNotFoundException c)
    {
        out.println(c);
    }
    catch(SQLException se)
    {
        out.println(se);
    }
    }
}

Web.xml
<?xml version="1.0" encoding="UTF-8"?>
<!--
 Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
                      http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
  version="3.1"
  metadata-complete="true">

  <display-name>Welcome to Tomcat</display-name>
  <description>
     Welcome to Tomcat
  </description>
<servlet>
   <servlet-name>Hello</servlet-name>
   <servlet-class>HelloWorldServlet</servlet-class>
</servlet>
<servlet-mapping>
   <servlet-name>Hello</servlet-name>
   <url-pattern>/sayhello</url-pattern>
</servlet-mapping>
<servlet>
   <servlet-name>Registration</servlet-name>
   <servlet-class>Register</servlet-class>
</servlet>
<servlet-mapping>
   <servlet-name>Registration</servlet-name>
   <url-pattern>/regis</url-pattern>
</servlet-mapping>
<servlet>
   <servlet-name>loginv</servlet-name>
   <servlet-class>Validate</servlet-class>
</servlet>
<servlet-mapping>
   <servlet-name>loginv</servlet-name>
   <url-pattern>/valid</url-pattern>
</servlet-mapping>
<servlet>  
	<servlet-name>jspserv</servlet-name>  
	<jsp-file>/Readinit.jsp</jsp-file>  
           <init-param>  
		<param-name>userid</param-name>  
		<param-value>user1</param-value>  
	   </init-param>  
</servlet>  
   <servlet-mapping>  
	<servlet-name>jspserv</servlet-name>  
	<url-pattern>/Readinit.jsp</url-pattern>  
   </servlet-mapping>
   <servlet>  
	   <servlet-name>jspcontext</servlet-name>  
	   <jsp-file>/Readcontext.jsp</jsp-file>  
   </servlet>  
   <servlet-mapping>  
	   <servlet-name>jspcontext</servlet-name>  
	   <url-pattern>/Readcontext.jsp</url-pattern>  
   </servlet-mapping>   
<servlet>
   <servlet-name>bookcat</servlet-name>
   <servlet-class>Bookscat</servlet-class>
</servlet>
<servlet-mapping>
   <servlet-name>bookcat</servlet-name>
   <url-pattern>/bookscat</url-pattern>
</servlet-mapping> 
   <context-param>  
		<param-name>userid</param-name>  
		<param-value>user1</param-value>  
	</context-param> 
</web-app>

Output:
